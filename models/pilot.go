package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Pilot pilot
// swagger:model pilot
type Pilot struct {

	// first name
	// Min Length: 1
	FirstName string `json:"firstName,omitempty"`

	// id
	// Read Only: true
	ID int64 `json:"id,omitempty"`

	// last name
	// Min Length: 1
	LastName string `json:"lastName,omitempty"`

	// licensed
	Licensed bool `json:"licensed,omitempty"`
}

// Validate validates this pilot
func (m *Pilot) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFirstName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateLastName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Pilot) validateFirstName(formats strfmt.Registry) error {

	if swag.IsZero(m.FirstName) { // not required
		return nil
	}

	if err := validate.MinLength("firstName", "body", string(m.FirstName), 1); err != nil {
		return err
	}

	return nil
}

func (m *Pilot) validateLastName(formats strfmt.Registry) error {

	if swag.IsZero(m.LastName) { // not required
		return nil
	}

	if err := validate.MinLength("lastName", "body", string(m.LastName), 1); err != nil {
		return err
	}

	return nil
}
