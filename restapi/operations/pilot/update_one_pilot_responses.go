package pilot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/dominictracey/rugby-scores/models"
)

// UpdateOnePilotOKCode is the HTTP code returned for type UpdateOnePilotOK
const UpdateOnePilotOKCode int = 200

/*UpdateOnePilotOK OK

swagger:response updateOnePilotOK
*/
type UpdateOnePilotOK struct {

	/*
	  In: Body
	*/
	Payload *models.Pilot `json:"body,omitempty"`
}

// NewUpdateOnePilotOK creates UpdateOnePilotOK with default headers values
func NewUpdateOnePilotOK() *UpdateOnePilotOK {
	return &UpdateOnePilotOK{}
}

// WithPayload adds the payload to the update one pilot o k response
func (o *UpdateOnePilotOK) WithPayload(payload *models.Pilot) *UpdateOnePilotOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update one pilot o k response
func (o *UpdateOnePilotOK) SetPayload(payload *models.Pilot) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateOnePilotOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UpdateOnePilotDefault error

swagger:response updateOnePilotDefault
*/
type UpdateOnePilotDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateOnePilotDefault creates UpdateOnePilotDefault with default headers values
func NewUpdateOnePilotDefault(code int) *UpdateOnePilotDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateOnePilotDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update one pilot default response
func (o *UpdateOnePilotDefault) WithStatusCode(code int) *UpdateOnePilotDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update one pilot default response
func (o *UpdateOnePilotDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update one pilot default response
func (o *UpdateOnePilotDefault) WithPayload(payload *models.Error) *UpdateOnePilotDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update one pilot default response
func (o *UpdateOnePilotDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateOnePilotDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
